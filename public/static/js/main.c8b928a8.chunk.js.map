{"version":3,"sources":["index.tsx"],"names":["LoadingComponent","isLoading","error","Home","Loadable","loader","loading","Blog","About","App","props","state","isRender","setTimeout","setState","console","log","children","React","Component","elem","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,GAAMA,iBAAgB,CAAG,QAAnBA,iBAAmB,CAACC,SAAD,CAAiBC,KAAjB,CAAgC,CACrD,GAAID,SAAJ,CAAe,CACX,MAAO,KAAP,CACH,CAFD,IAGK,IAAIC,KAAJ,CAAW,CACZ,MAAO,KAAP,CACH,CAFI,IAGA,CACD,MAAO,KAAP,CACH,CACJ,CAVD,CAWA,GAAMC,KAAI,CAAGC,qDAAQ,CAAC,CAClBC,MAAM,CAAE,wBAAM,wFAAN,EADU,CAElBC,OAAO,CAAEN,gBAFS,CAAD,CAArB,CAIA,GAAMO,KAAI,CAAGH,qDAAQ,CAAC,CAClBC,MAAM,CAAE,wBAAM,wFAAN,EADU,CAElBC,OAAO,CAAEN,gBAFS,CAAD,CAArB,CAIA,GAAMQ,MAAK,CAAGJ,qDAAQ,CAAC,CACnBC,MAAM,CAAE,wBAAM,yFAAN,EADW,CAEnBC,OAAO,CAAEN,gBAFU,CAAD,CAAtB,C,GAQMS,I,2MACF,aAAYC,KAAZ,CAAwB,uKACpB,yUAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACTC,QAAQ,CAAE,KADD,CAAb,CAFoB,aAKvB,C,iNACoB,iBACjBC,UAAU,CAAC,UAAM,CACb,MAAI,CAACC,QAAL,CAAc,CACVF,QAAQ,CAAE,IADA,CAAd,EAGH,CAJS,CAIP,GAJO,CAAV,CAKH,C,uCACQ,CACL,GAAI,CAAC,KAAKD,KAAL,CAAWC,QAAhB,CAA0B,CACtBG,OAAO,CAACC,GAAR,CAAY,OAAZ,EACA,MAAO,KAAP,CACH,CACD,MACI,4DAAC,4CAAD,CAAO,QAAP,MACI,sEACI,kGADJ,CAII,+EAJJ,CAOI,+EAPJ,CADJ,CAYI,sEAEQ,KAAKN,KAAL,CAAWO,QAFnB,CAZJ,CADJ,CAoBH,C,iBAvCaC,4CAAK,CAACC,S,EA0CxB,GAAMC,KAAI,CAAG,2DAAC,mEAAD,MACT,2DAAC,GAAD,MACI,2DAAC,+DAAD,MACI,2DAAC,8DAAD,EAAO,IAAI,CAAE,GAAb,CAAkB,KAAK,KAAvB,CAAwB,SAAS,CAAEjB,IAAnC,EADJ,CAEI,2DAAC,8DAAD,EAAO,IAAI,CAAE,OAAb,CAAsB,KAAK,KAA3B,CAA4B,SAAS,CAAEA,IAAvC,EAFJ,CAGI,2DAAC,8DAAD,EAAO,IAAI,CAAE,OAAb,CAAsB,KAAK,KAA3B,CAA4B,SAAS,CAAEI,IAAvC,EAHJ,CAII,2DAAC,8DAAD,EAAO,IAAI,CAAE,QAAb,CAAuB,KAAK,KAA5B,CAA6B,SAAS,CAAEC,KAAxC,EAJJ,CADJ,CADS,CAAb,CAYAa,gDAAQ,CAACC,MAAT,CAAgBF,IAAhB,CAAsBG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAtB,EAEA;AACA;AACA;AACA,8B","file":"static/js/main.c8b928a8.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    HashRouter as Router,\n    Route,\n    Switch\n} from 'react-router-dom';\nimport Loadable from 'react-loadable';\nimport * as style from './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst LoadingComponent = (isLoading: any, error: any) => {\n    if (isLoading) {\n        return null;\n    }\n    else if (error) {\n        return null;\n    }\n    else {\n        return null;\n    }\n};\nconst Home = Loadable({\n    loader: () => import('../src/pages/home' /* webpackChunkName: \"home\"*/),\n    loading: LoadingComponent\n});\nconst Blog = Loadable({\n    loader: () => import('../src/pages/blog' /* webpackChunkName: \"blog\"*/),\n    loading: LoadingComponent\n});\nconst About = Loadable({\n    loader: () => import('../src/pages/about' /* webpackChunkName: \"about\"*/),\n    loading: LoadingComponent\n});\n\ninterface IState {\n    isRender: boolean;\n}\nclass App extends React.Component<{}, IState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            isRender: false\n        }\n    }\n    componentWillMount() {\n        setTimeout(() => {\n            this.setState({\n                isRender: true\n            })\n        }, 100)\n    }\n    render() {\n        if (!this.state.isRender) {\n            console.log(\"初始为渲染\");\n            return null;\n        }\n        return (\n            <React.Fragment>\n                <div>\n                    <span>\n                        返回按钮\n                    </span>\n                    <span>\n                        title\n                    </span>\n                    <span>\n                        other\n                    </span>\n                </div>\n                <div>\n                    {\n                        this.props.children\n                    }\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst elem = <Router>\n    <App>\n        <Switch>\n            <Route path={'/'} exact component={Home}></Route>\n            <Route path={'/home'} exact component={Home}></Route>\n            <Route path={'/blog'} exact component={Blog}></Route>\n            <Route path={'/about'} exact component={About}></Route>\n        </Switch>\n    </App>\n</Router>\n\n\nReactDOM.render(elem, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}